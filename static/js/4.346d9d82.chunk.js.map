{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","components/erorrBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","request","clearError","process","setProcess","useHttp","useState","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","json","e","_apiBase","_apiKey","_transformChar","char","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","prices","price","getAllCharacters","offset","res","data","results","map","getCharacter","getAllComics","getComic","getCharacterByName","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","ErrorBoundary","constructor","state","error","componentDidCatch","err","info","console","log","this","setState","render","props","View","_ref","thumbnailStyles","descriptionInfo","slice","includes","href","RandomChar","setChar","onCharLoaded","updateChar","Math","floor","random","then","useEffect","onClick","mjolnir","CharList","charList","setCharList","newItemsLoading","setNewItemsLoading","setOffset","charEnded","setCharEnded","onCharListLoaded","newCharList","ended","onRequest","initial","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","arr","i","CSSTransition","in","timeout","classNames","onCharSelected","onKeyPress","key","tabIndex","ref","el","transitionDelay","TransitionGroup","appear","component","renderItems","disabled","propsTypes","PropTypes","func","comicsContent","comicId","resourceURI","substring","Link","to","CharInfo","charId","CharSearchForm","errorMessage","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","MainPage","selectedChar","setSelectedChar","Helmet","content","decoration"],"mappings":"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","file":"static/js/4.346d9d82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'block',\n\t\t\t\twidth: '250px',\n\t\t\t\theight: '250px',\n\t\t\t\tobjectFit: 'contain',\n\t\t\t\tmargin: '0 auto',\n\t\t\t}}\n\t\t\tsrc={img}\n\t\t\talt=\"Error\"\n\t\t/>\n\t);\n};\n\nexport default ErrorMessage;\n","import { useHttp } from '../hooks/http.hook';\n\nconst API_KEY_VALUE = process.env.REACT_APP_API_KEY;\n\nconst useMarvelService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp();\n\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\tconst _apiKey = `apikey=${API_KEY_VALUE}`;\n\tconst _basicOffset = 210;\n\n\tconst getAllCharacters = async (offset = _basicOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformChar);\n\t};\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformChar(res.data.results[0]);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformChar);\n\t};\n\n\tconst _transformChar = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description,\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || 'There is no description',\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: 'No information about the number of pages',\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || 'en-us',\n\t\t\tprices: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: 'not available',\n\t\t};\n\t};\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetAllComics,\n\t\tgetComic,\n\t\tgetCharacterByName,\n\t};\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = 'GET',\n\t\t\tbody = null,\n\t\t\theaders = { 'Content-Type': 'application/json' }\n\t\t) => {\n\t\t\tsetProcess('loading');\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error');\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading');\n\t}, []);\n\n\treturn { request, clearError, process, setProcess };\n};\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport Skeleton from '../components/skeleton/Skeleton';\nimport Spinner from '../components/spinner/Spinner';\n\nconst setContent = (process, Component, data) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Skeleton />;\n\t\tcase 'loading':\n\t\t\treturn <Spinner />;\n\t\tcase 'confirmed':\n\t\t\treturn <Component data={data} />;\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage />;\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state');\n\t}\n};\n\nexport default setContent;\n","import { Component } from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n\tstate = {\n\t\terror: false,\n\t};\n\tcomponentDidCatch(err, info) {\n\t\tconsole.log(err, info);\n\t\tthis.setState({\n\t\t\terror: true,\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn <ErrorMessage />;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './randomChar.scss';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({});\n\n\tconst { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011355 - 1009224) + 1009224);\n\t\tgetCharacter(id)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t};\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{setContent(process, View, char)}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\n\t\t\t\t<button className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\" onClick={updateChar}>\n\t\t\t\t\t\ttry it\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ data }) => {\n\tlet { name, description, thumbnail, homepage, wiki } = data;\n\tlet descriptionInfo = !description ? 'No description' : description;\n\tdescriptionInfo =\n\t\tdescriptionInfo.length > 100\n\t\t\t? descriptionInfo.slice(0, 200) + '...'\n\t\t\t: descriptionInfo;\n\tif (!thumbnail)\n\t\tthumbnail =\n\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n\tlet thumbnailStyles;\n\tif (thumbnail.includes('image_not_available')) {\n\t\tthumbnailStyles = {\n\t\t\tobjectFit: 'contain',\n\t\t};\n\t}\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\tstyle={thumbnailStyles}\n\t\t\t\talt=\"Random character\"\n\t\t\t\tclassName=\"randomchar__img\"\n\t\t\t/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{descriptionInfo}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst setContent = (process, items, newItemsLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner />;\n\t\tcase 'loading':\n\t\t\treturn newItemsLoading ? items : <Spinner />;\n\t\tcase 'confirmed':\n\t\t\treturn items;\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage />;\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state');\n\t}\n};\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemsLoading, setNewItemsLoading] = useState(false);\n\tconst [offset, setOffset] = useState(285);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { getAllCharacters, process, setProcess } = useMarvelService();\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) ended = true;\n\n\t\tsetCharList((charList) => [...charList, ...newCharList]);\n\t\tsetNewItemsLoading(false);\n\t\tsetOffset(offset + 9);\n\t\tsetCharEnded(ended);\n\t};\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t};\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach((item) =>\n\t\t\titem.classList.remove('char__item_selected')\n\t\t);\n\t\titemRefs.current[id].classList.add('char__item_selected');\n\t\titemRefs.current[id].focus();\n\t};\n\n\tconst renderItems = (arr) => {\n\t\tconst duration = 300;\n\t\tconst items = arr.map((item, i) => {\n\t\t\tconst { thumbnail, name, id } = item;\n\t\t\tlet thumbnailStyles;\n\t\t\tif (thumbnail.includes('image_not_available')) {\n\t\t\t\tthumbnailStyles = {\n\t\t\t\t\tobjectFit: 'contain',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin=\"true\"\n\t\t\t\t\tkey={id}\n\t\t\t\t\ttimeout={duration}\n\t\t\t\t\tclassNames=\"char-anim\"\n\t\t\t\t>\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onCharSelected(id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\t\tprops.onCharSelected(id);\n\t\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\tref={(el) => (itemRefs.current[i] = el)}\n\t\t\t\t\t\tstyle={{ transitionDelay: `${duration * i * 0.5}ms` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img src={thumbnail} style={thumbnailStyles} alt=\"abyss\" />\n\t\t\t\t\t\t<div className=\"char__name\">{name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t<TransitionGroup appear={true} component={null}>\n\t\t\t\t\t{items}\n\t\t\t\t</TransitionGroup>\n\t\t\t</ul>\n\t\t);\n\t};\n\n\tconst elements = useMemo(() => {\n\t\treturn setContent(process, renderItems(charList), newItemsLoading);\n\t}, [process]);\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{elements}\n\t\t\t<button\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemsLoading}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nCharList.propsTypes = {\n\tonCharSelected: PropTypes.func,\n};\n\nexport default CharList;\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from './../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst { getCharacter, process, setProcess } =\n\t\tuseMarvelService();\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props;\n\t\tif (!charId) return;\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t};\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [props.charId]);\n\n\treturn <div className=\"char__info\">{setContent(process, View, char)}</div>;\n};\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = data;\n\tlet thumbnailStyles;\n\tif (thumbnail.includes('image_not_available')) {\n\t\tthumbnailStyles = {\n\t\t\tobjectFit: 'contain',\n\t\t};\n\t}\n\tlet comicsContent = !comics.length\n\t\t? 'Not comics'\n\t\t: comics\n\t\t\t\t.map((item, i) => {\n\t\t\t\t\tconst comicId = item.resourceURI.substring(43);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\n\t\t\t\t\t\t\t<Link to={`comics/${comicId}`}>{item.name}</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.slice(0, 10);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img src={thumbnail} alt={name} style={thumbnailStyles} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">{description}</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">{comicsContent}</ul>\n\t\t</>\n\t);\n};\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n\tFormik,\n\tForm,\n\tField,\n\tErrorMessage as FormikErrorMessage,\n} from 'formik';\nimport * as Yup from 'yup';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charSearchForm.scss';\n\nconst CharSearchForm = () => {\n\tconst [char, setChar] = useState(null);\n\tconst { getCharacterByName, clearError, process, setProcess } =\n\t\tuseMarvelService();\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = (name) => {\n\t\tclearError();\n\n\t\tgetCharacterByName(name)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t};\n\n\tconst errorMessage =\n\t\tprocess === 'error' ? (\n\t\t\t<div className=\"char__search-critical-error\">\n\t\t\t\t<ErrorMessage />\n\t\t\t</div>\n\t\t) : null;\n\n\tconst results = !char ? null : char.length > 0 ? (\n\t\t<div className=\"char__search-wrapper\">\n\t\t\t<div className=\"char__search-success\">\n\t\t\t\tThere is! Visit {char[0].name} page?\n\t\t\t</div>\n\t\t\t<Link\n\t\t\t\tto={`/characters/${char[0].id}`}\n\t\t\t\tclassName=\"button button__secondary\"\n\t\t\t>\n\t\t\t\t<div className=\"inner\">To page</div>\n\t\t\t</Link>\n\t\t</div>\n\t) : (\n\t\t<div className=\"char__search-error\">\n\t\t\tThe character was not found. Check the name and try again\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className=\"char__search-form\">\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tcharName: '',\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object({\n\t\t\t\t\tcharName: Yup.string().required('This field is required'),\n\t\t\t\t})}\n\t\t\t\tonSubmit={({ charName }) => updateChar(charName)}\n\t\t\t>\n\t\t\t\t<Form>\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">\n\t\t\t\t\t\tOr find a character by name:\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"char__search-wrapper\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"charName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"charName\"\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"button button__main\"\n\t\t\t\t\t\t\tdisabled={process === 'loading'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<FormikErrorMessage\n\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\tclassName=\"char__search-error\"\n\t\t\t\t\t\tname=\"charName\"\n\t\t\t\t\t/>\n\t\t\t\t</Form>\n\t\t\t</Formik>\n\t\t\t{results}\n\t\t\t{errorMessage}\n\t\t</div>\n\t);\n};\n\nexport default CharSearchForm;\n","import { useState } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport RandomChar from '../randomChar/RandomChar';\nimport CharList from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport ErrorBoundary from './../erorrBoundary/ErrorBoundary';\n\nimport decoration from '../../resources/img/vision.png';\nimport CharSearchForm from '../charSearchForm/CharSearchForm';\n\nconst MainPage = () => {\n\tconst [selectedChar, setSelectedChar] = useState(null);\n\n\tconst onCharSelected = (id) => {\n\t\tsetSelectedChar(id);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<meta name=\"description\" content=\"Marvel information portal\" />\n\t\t\t\t<title>Marvel information portal</title>\n\t\t\t</Helmet>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<RandomChar />\n\t\t\t</ErrorBoundary>\n\t\t\t<div className=\"char__content\">\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\n\t\t\t\t</ErrorBoundary>\n\t\t\t\t<div>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CharInfo charId={selectedChar} />\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CharSearchForm />\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</div>\n\t\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default MainPage;\n"],"sourceRoot":""}