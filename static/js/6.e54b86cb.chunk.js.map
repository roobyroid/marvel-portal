{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/erorrBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","request","clearError","process","setProcess","useHttp","useState","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","json","e","_apiBase","_apiKey","_transformChar","char","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","prices","price","getAllCharacters","offset","res","data","results","map","getCharacter","getAllComics","getComic","getCharacterByName","ErrorBoundary","Component","constructor","state","error","componentDidCatch","err","info","console","log","this","setState","render","props","children","AppBanner","_jsxs","className","avengers","avengersLogo","setContent","newItemsLoading","Spinner","ComicsList","comicsList","setComicsList","setNewItemsLoading","setOffset","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","ended","onRequest","initial","then","useEffect","arr","item","i","thumbnailStyles","includes","Link","to","renderItems","disabled","onClick","propsTypes","onCharSelected","PropTypes","func","ComicsPage","_Fragment","Helmet","content"],"mappings":"iGAAe,UAA0B,kC,OCiB1BA,IAhBMA,IAEnBC,cAAA,OACCC,MAAO,CACNC,QAAS,QACTC,MAAO,QACPC,OAAQ,QACRC,UAAW,UACXC,OAAQ,UAETC,IAAKC,EACLC,IAAI,W,2CCoEQC,IA5EUA,KACxB,MAAM,QAAEC,EAAO,WAAEC,EAAU,QAAEC,EAAO,WAAEC,GCHhBC,MACtB,MAAOF,EAASC,GAAcE,mBAAS,WAiCvC,MAAO,CAAEL,QA/BOM,uBACfC,eACCC,GAIK,IAHLC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MACTG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACPI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAE,eAAgB,oBAE5BP,EAAW,WAEX,IACC,MAAMY,QAAiBC,MAAMR,EAAK,CAAEC,SAAQI,OAAMC,YAElD,IAAKC,EAASE,GACb,MAAM,IAAIC,MAAM,mBAADC,OAAoBX,EAAG,cAAAW,OAAaJ,EAASK,SAK7D,aAFmBL,EAASM,OAG3B,MAAOC,GAER,MADAnB,EAAW,SACLmB,KAGR,IAOiBrB,WAJCK,uBAAY,KAC9BH,EAAW,aACT,IAE2BD,UAASC,eD/BcC,GAE/CmB,EAAW,4CACXC,EAAO,UAAAL,OANQjB,oCAsCfuB,EAAkBC,IAChB,CACNC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXC,YAAaH,EAAKG,YAClBC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAG1B,IACvB2B,KAAMT,EAAKQ,KAAK,GAAG1B,IACnB4B,OAAQV,EAAKU,OAAOC,QAIhBC,EAAoBF,IAAY,IAADG,EACpC,MAAO,CACNZ,GAAIS,EAAOT,GACXa,MAAOJ,EAAOI,MACdX,YAAaO,EAAOP,aAAe,0BACnCY,UAAWL,EAAOK,UAAS,GAAAtB,OACrBiB,EAAOK,UAAS,OACnB,2CACHX,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DU,UAA+B,QAArBH,EAAAH,EAAOO,YAAY,UAAE,IAAAJ,OAAA,EAArBA,EAAuBG,WAAY,QAC7CE,OAAQR,EAAOQ,OAAO,GAAGC,MAAK,GAAA1B,OACxBiB,EAAOQ,OAAO,GAAGC,MAAK,KACzB,kBAIL,MAAO,CACN5C,aACAC,UACAC,aACA2C,iBA7DwBvC,iBAAkC,IAA3BwC,EAAMrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFjB,IAGpB,MAAMsC,QAAYhD,EAAQ,GAADmB,OACrBI,EAAQ,8BAAAJ,OAA6B4B,EAAM,KAAA5B,OAAIK,IAEnD,OAAOwB,EAAIC,KAAKC,QAAQC,IAAI1B,IA0D5B2B,aA3CoB7C,UACpB,MAAMyC,QAAYhD,EAAQ,GAADmB,OAAII,EAAQ,eAAAJ,OAAcQ,EAAE,KAAAR,OAAIK,IACzD,OAAOC,EAAeuB,EAAIC,KAAKC,QAAQ,KA0CvCG,aAxDoB9C,iBAAuB,IAAhBwC,EAAMrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACpC,MAAMsC,QAAYhD,EAAQ,GAADmB,OACrBI,EAAQ,8CAAAJ,OAA6C4B,EAAM,KAAA5B,OAAIK,IAEnE,OAAOwB,EAAIC,KAAKC,QAAQC,IAAIb,IAqD5BgB,SAlDgB/C,UAChB,MAAMyC,QAAYhD,EAAQ,GAADmB,OAAII,EAAQ,WAAAJ,OAAUQ,EAAE,KAAAR,OAAIK,IACrD,OAAOc,EAAiBU,EAAIC,KAAKC,QAAQ,KAiDzCK,mBAzC0BhD,gBACRP,EAAQ,GAADmB,OAAII,EAAQ,oBAAAJ,OAAmBS,EAAI,KAAAT,OAAIK,KACrDyB,KAAKC,QAAQC,IAAI1B,M,gCErC9B,0BAGA,MAAM+B,UAAsBC,YAAUC,cAAA,SAAAhD,WAAA,KACrCiD,MAAQ,CACPC,OAAO,GAERC,kBAAkBC,EAAKC,GACtBC,QAAQC,IAAIH,EAAKC,GACjBG,KAAKC,SAAS,CACbP,OAAO,IAITQ,SACC,OAAIF,KAAKP,MAAMC,MACPvE,cAACD,IAAY,IAEd8E,KAAKG,MAAMC,UAILd,O,+DCtBA,MAA0B,qCCA1B,MAA0B,0C,OCiB1Be,IAbGA,IAEVC,eAAA,OAAKC,UAAU,cAAaH,SAAA,CACxBjF,cAAA,OAAKO,IAAK8E,EAAU5E,IAAI,aACxB0E,eAAA,OAAKC,UAAU,mBAAkBH,SAAA,CAAC,yBACRjF,cAAA,SAAK,iBAG/BA,cAAA,OAAKO,IAAK+E,EAAc7E,IAAI,sB,6ICFxC,MAAM8E,EAAaA,CAAC1E,EAASuD,EAAWoB,KACvC,OAAQ3E,GACP,IAAK,UACJ,OAAOb,cAACyF,IAAO,IAChB,IAAK,UACJ,OAAOD,EAAkBxF,cAACoE,EAAS,IAAMpE,cAACyF,IAAO,IAClD,IAAK,YACJ,OAAOzF,cAACoE,EAAS,IAClB,IAAK,QACJ,OAAOpE,cAACD,IAAY,IACrB,QACC,MAAM,IAAI8B,MAAM,8BAIb6D,EAAaA,KAClB,MAAOC,EAAYC,GAAiB5E,mBAAS,KACtCwE,EAAiBK,GAAsB7E,oBAAS,IAChD0C,EAAQoC,GAAa9E,mBAAS,MAC9B+E,EAAaC,GAAkBhF,oBAAS,IAEzC,aAAEgD,EAAY,QAAEnD,EAAO,WAAEC,GAAeJ,cAExCuF,EAAsBC,IAC3B,IAAIC,GAAQ,EACRD,EAAc5E,OAAS,IAAG6E,GAAQ,GAEtCP,GAAeD,GAAe,IAAIA,KAAeO,KACjDL,GAAmB,GACnBC,EAAUpC,EAAS,GACnBsC,EAAeG,IAGVC,EAAYA,CAAC1C,EAAQ2C,KAChBR,GAAVQ,GACArC,EAAaN,GACX4C,KAAKL,GACLK,MAAK,IAAMxF,EAAW,gBAGzByF,qBAAU,KACTH,EAAU1C,GAAQ,KAEhB,IA+BH,OACCyB,eAAA,OAAKC,UAAU,eAAcH,SAAA,CAC3BM,EAAW1E,GAAS,IA/BF2F,KACpB,MAAMxD,EAAQwD,EAAI1C,KAAI,CAAC2C,EAAMC,KAC5B,MAAM,UAAEjE,EAAS,MAAEU,EAAK,GAAEb,EAAE,MAAEkB,GAAUiD,EAExC,IAAIE,EAOJ,OANIlE,EAAUmE,SAAS,yBACtBD,EAAkB,CACjBtG,UAAW,YAKZL,cAAA,MAAIoF,UAAU,eAAcH,SAC3BE,eAAC0B,IAAI,CAACC,GAAE,WAAAhF,OAAaQ,GAAK2C,SAAA,CACzBjF,cAAA,OACCO,IAAKkC,EACLxC,MAAO0G,EACPlG,IAAK0C,EACLiC,UAAU,qBAEXpF,cAAA,KAAGoF,UAAU,oBAAmBH,SAAE9B,IAClCnD,cAAA,QAAMoF,UAAU,qBAAoBH,SAAEzB,QATNkD,MAcpC,OAAO1G,cAAA,MAAIoF,UAAU,eAAcH,SAAEjC,KAKT+D,CAAYpB,IAAaH,GAEpDxF,cAAA,UACCoF,UAAU,mCACVnF,MAAO,CAAEC,QAAS6F,EAAc,OAAS,SACzCiB,SAAUxB,EACVyB,QAASA,IAAMb,EAAU1C,GAAQuB,SAEjCjF,cAAA,OAAKoF,UAAU,QAAOH,SAAC,oBAM3BS,EAAWwB,WAAa,CACvBC,eAAgBC,IAAUC,MAGZ3B,Q,gBCpFA4B,UAfIA,IAEjBnC,eAAAoC,WAAA,CAAAtC,SAAA,CACCE,eAACqC,IAAM,CAAAvC,SAAA,CACNjF,cAAA,QAAMuC,KAAK,cAAckF,QAAQ,8BACjCzH,cAAA,SAAAiF,SAAO,mBAERjF,cAACkF,IAAS,IACVlF,cAACmE,IAAa,CAAAc,SACbjF,cAAC0F,EAAU","file":"static/js/6.e54b86cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'block',\n\t\t\t\twidth: '250px',\n\t\t\t\theight: '250px',\n\t\t\t\tobjectFit: 'contain',\n\t\t\t\tmargin: '0 auto',\n\t\t\t}}\n\t\t\tsrc={img}\n\t\t\talt=\"Error\"\n\t\t/>\n\t);\n};\n\nexport default ErrorMessage;\n","import { useHttp } from '../hooks/http.hook';\n\nconst API_KEY_VALUE = process.env.REACT_APP_API_KEY;\n\nconst useMarvelService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp();\n\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\tconst _apiKey = `apikey=${API_KEY_VALUE}`;\n\tconst _basicOffset = 210;\n\n\tconst getAllCharacters = async (offset = _basicOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformChar);\n\t};\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformChar(res.data.results[0]);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformChar);\n\t};\n\n\tconst _transformChar = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description,\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || 'There is no description',\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: 'No information about the number of pages',\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || 'en-us',\n\t\t\tprices: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: 'not available',\n\t\t};\n\t};\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetAllComics,\n\t\tgetComic,\n\t\tgetCharacterByName,\n\t};\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = 'GET',\n\t\t\tbody = null,\n\t\t\theaders = { 'Content-Type': 'application/json' }\n\t\t) => {\n\t\t\tsetProcess('loading');\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error');\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading');\n\t}, []);\n\n\treturn { request, clearError, process, setProcess };\n};\n","import { Component } from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n\tstate = {\n\t\terror: false,\n\t};\n\tcomponentDidCatch(err, info) {\n\t\tconsole.log(err, info);\n\t\tthis.setState({\n\t\t\terror: true,\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn <ErrorMessage />;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemsLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner />;\n\t\tcase 'loading':\n\t\t\treturn newItemsLoading ? <Component /> : <Spinner />;\n\t\tcase 'confirmed':\n\t\t\treturn <Component />;\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage />;\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state');\n\t}\n};\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemsLoading, setNewItemsLoading] = useState(false);\n\tconst [offset, setOffset] = useState(285);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tconst { getAllComics, process, setProcess } = useMarvelService();\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) ended = true;\n\n\t\tsetComicsList((comicsList) => [...comicsList, ...newComicsList]);\n\t\tsetNewItemsLoading(false);\n\t\tsetOffset(offset + 8);\n\t\tsetComicsEnded(ended);\n\t};\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t};\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst renderItems = (arr) => {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tconst { thumbnail, title, id, price } = item;\n\n\t\t\tlet thumbnailStyles;\n\t\t\tif (thumbnail.includes('image_not_available')) {\n\t\t\t\tthumbnailStyles = {\n\t\t\t\t\tobjectFit: 'contain',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\" key={i}>\n\t\t\t\t\t<Link to={`/comics/${id}`}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={thumbnail}\n\t\t\t\t\t\t\tstyle={thumbnailStyles}\n\t\t\t\t\t\t\talt={title}\n\t\t\t\t\t\t\tclassName=\"comics__item-img\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className=\"comics__item-name\">{title}</p>\n\t\t\t\t\t\t<span className=\"comics__item-price\">{price}</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\treturn <ul className=\"comics__grid\">{items}</ul>;\n\t};\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{setContent(process, () => renderItems(comicsList), newItemsLoading)}\n\n\t\t\t<button\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tstyle={{ display: comicsEnded ? 'none' : 'block' }}\n\t\t\t\tdisabled={newItemsLoading}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nComicsList.propsTypes = {\n\tonCharSelected: PropTypes.func,\n};\n\nexport default ComicsList;\n","import { Helmet } from 'react-helmet';\nimport ComicsList from '../comicsList/ComicsList';\nimport AppBanner from '../appBanner/AppBanner';\nimport ErrorBoundary from './../erorrBoundary/ErrorBoundary';\n\nconst ComicsPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<meta name=\"description\" content=\"Page with list our comics\" />\n\t\t\t\t<title>Comics page</title>\n\t\t\t</Helmet>\n\t\t\t<AppBanner />\n\t\t\t<ErrorBoundary>\n\t\t\t\t<ComicsList></ComicsList>\n\t\t\t</ErrorBoundary>\n\t\t</>\n\t);\n};\n\nexport default ComicsPage;\n"],"sourceRoot":""}